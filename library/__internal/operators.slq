// prototypes and implementations of Silq operators

// unary operators

// !b
def __unot(b:ùîπ)lifted:ùîπ;

// -x
def __uminus_s[n:!‚Ñï](x:int[n])lifted:int[n];
def __uminus_u[n:!‚Ñï](x:uint[n])lifted:uint[n];

def __uminus_‚Ñ§(x:!‚Ñ§)lifted:!‚Ñ§; // -x
def __uminus_‚Ñö(x:!‚Ñö)lifted:!‚Ñö; // -x
def __uminus_‚Ñù(x:!‚Ñù)lifted:!‚Ñù; // -x
def __uminus_‚ÑÇ(x:!‚ÑÇ)lifted:!‚ÑÇ; // -x

// ~x
def __bitnot_s[n:!‚Ñï](x:int[n])lifted:int[n];
def __bitnot_u[n:!‚Ñï](x:uint[n])lifted:uint[n];

// binary operators

// a+b
def __add_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __add_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __add_‚Ñ§s[n:!‚Ñï](b:!‚Ñ§,a:int[n])lifted:int[n];

def __add_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __add_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __add_‚Ñ§u[n:!‚Ñï](b:!‚Ñ§,a:uint[n])lifted:uint[n];

def __add_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __add_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;
def __add_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñö;
def __add_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;
def __add_‚ÑÇ(a:!‚ÑÇ,b:!‚ÑÇ)lifted:!‚ÑÇ;

// a-b
def __sub_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __sub_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __sub_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:int[n])lifted:int[n];

def __sub_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __sub_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __sub_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:uint[n])lifted:uint[n];

def __sub_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __sub_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;
def __sub_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñö;
def __sub_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;
def __sub_‚ÑÇ(a:!‚ÑÇ,b:!‚ÑÇ)lifted:!‚ÑÇ;

// a sub b
def __nsub_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __nsub_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __nsub_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:int[n])lifted:int[n];

def __nsub_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __nsub_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __nsub_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:uint[n])lifted:uint[n];

def __nsub_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñï;

// a¬∑b
def __mul_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __mul_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __mul_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:int[n])lifted:int[n];

def __mul_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __mul_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __mul_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:uint[n])lifted:uint[n];

def __mul_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __mul_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;
def __mul_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñö;
def __mul_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;
def __mul_‚ÑÇ(a:!‚ÑÇ,b:!‚ÑÇ)lifted:!‚ÑÇ;

// a/b
def __div_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñö;
def __div_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;
def __div_‚ÑÇ(a:!‚ÑÇ,b:!‚ÑÇ)lifted:!‚ÑÇ;

// a div b
def __idiv_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __idiv_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __idiv_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:int[n])lifted:int[n];

def __idiv_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __idiv_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __idiv_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:uint[n])lifted:uint[n];

def __idiv_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __idiv_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;
def __idiv_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñ§;
def __idiv_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñ§;

// a % b
def __mod_s[m:!‚Ñï,n:!‚Ñï](a:int[m],b:int[n])lifted:int[n];
def __mod_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:int[n])lifted:int[n];

def __mod_u[m:!‚Ñï,n:!‚Ñï](a:uint[m],b:uint[n])lifted:uint[n];
def __mod_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:uint[n])lifted:uint[n];
def __mod_u‚Ñï[n:!‚Ñï](a:uint[n],b:!‚Ñï)lifted:uint[n];

def __mod_us[m:!‚Ñï,n:!‚Ñï](a:uint[m],b:int[n])lifted:int[n];
def __mod_su[m:!‚Ñï,n:!‚Ñï](a:int[m],b:uint[n])lifted:uint[n];

def __mod_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __mod_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;
def __mod_‚Ñö(a:!‚Ñö,b:!‚Ñö)lifted:!‚Ñö;
def __mod_‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;

// a ^ b
def __pow_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __pow_‚Ñ§‚Ñï(a:!‚Ñ§,b:!‚Ñï)lifted:!‚Ñ§;
def __pow_‚Ñö‚Ñï(a:!‚Ñö,b:!‚Ñï)lifted:!‚Ñö;
def __pow_‚Ñù‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñù;

def __pow_‚Ñö‚Ñ§(a:!‚Ñö,b:!‚Ñ§)lifted:!‚Ñö;
def __pow_‚Ñù‚Ñö(a:!‚Ñù,b:!‚Ñö)lifted:!‚Ñù;
def __pow_‚Ñù‚Ñù(a:!‚Ñù,b:!‚Ñù)lifted:!‚Ñù;

// a ~ b

// def __cat_tt[n:!‚Ñï,m:!‚Ñï][œÉ:*^n,œÑ:*^m](x:‚àè œÉ,y:‚àè œÑ)lifted:‚àè(œÉ~œÑ);
def __cat_vv[n:!‚Ñï,m:!‚Ñï,a:*](xs:a^n,ys:a^m)lifted:a^(n+m);
def __cat_aa[a:*](xs:a[],ys:a[])lifted:a[];

// a | b
def __orb_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __orb_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __orb_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:!int[n])lifted:int[n];

def __orb_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __orb_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __orb_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:!uint[n])lifted:uint[n];

def __orb_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __orb_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;

// a ‚äï b
def __xorb_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __xorb_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __xorb_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:!int[n])lifted:int[n];

def __xorb_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __xorb_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __xorb_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:!uint[n])lifted:uint[n];

def __xorb_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __xorb_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;

// a & b
def __andb_s[n:!‚Ñï](a:int[n],b:int[n])lifted:int[n];
def __andb_s‚Ñ§[n:!‚Ñï](a:int[n],b:!‚Ñ§)lifted:int[n];
def __andb_‚Ñ§s[n:!‚Ñï](a:!‚Ñ§,b:!int[n])lifted:int[n];

def __andb_u[n:!‚Ñï](a:uint[n],b:uint[n])lifted:uint[n];
def __andb_u‚Ñ§[n:!‚Ñï](a:uint[n],b:!‚Ñ§)lifted:uint[n];
def __andb_‚Ñ§u[n:!‚Ñï](a:!‚Ñ§,b:!uint[n])lifted:uint[n];

def __andb_‚Ñï(a:!‚Ñï,b:!‚Ñï)lifted:!‚Ñï;
def __andb_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)lifted:!‚Ñ§;

// comparison operators

// TODO

// binary assignment operators

// a+=b
def __add_assign_s[n:!‚Ñï](moved a:int[n],const b:int[n])qfree:int[n];
def __add_assign_s‚Ñ§[n:!‚Ñï](moved a:int[n],const b:!‚Ñ§)qfree:int[n];
def __add_assign_‚Ñ§s[n:!‚Ñï](moved b:!‚Ñ§,const a:int[n])qfree:int[n]; // TODO: might be confusing

def __add_assign_u[n:!‚Ñï](moved a:uint[n],const b:uint[n])qfree:uint[n];
def __add_assign_u‚Ñ§[n:!‚Ñï](moved a:uint[n],const b:!‚Ñ§)qfree:uint[n];
def __add_assign_‚Ñ§u[n:!‚Ñï](moved b:!‚Ñ§,const a:uint[n])qfree:uint[n]; // TODO: might be confusing

def __add_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __add_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;
def __add_assign_‚Ñö(moved a:!‚Ñö,const b:!‚Ñö)qfree:!‚Ñö;
def __add_assign_‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;
def __add_assign_‚ÑÇ(moved a:!‚ÑÇ,const b:!‚ÑÇ)qfree:!‚ÑÇ;

// a-=b
def __sub_assign_s[n:!‚Ñï](moved a:int[n],const b:int[n])qfree:int[n];
def __sub_assign_s‚Ñ§[n:!‚Ñï](moved a:int[n],const b:!‚Ñ§)qfree:int[n];
def __sub_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n]; // TODO: might be confusing

def __sub_assign_u[n:!‚Ñï](moved a:uint[n],const b:uint[n])qfree:uint[n];
def __sub_assign_u‚Ñ§[n:!‚Ñï](moved a:uint[n],const b:!‚Ñ§)qfree:uint[n];
def __sub_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n]; // TODO: might be confusing

def __sub_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __sub_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;
def __sub_assign_‚Ñö(moved a:!‚Ñö,const b:!‚Ñö)qfree:!‚Ñö;
def __sub_assign_‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;
def __sub_assign_‚ÑÇ(moved a:!‚ÑÇ,const b:!‚ÑÇ)qfree:!‚ÑÇ;

// a sub= b
def __nsub_assign_s[n:!‚Ñï](moved a:int[n],const b:int[n])qfree:int[n];
def __nsub_assign_s‚Ñ§[n:!‚Ñï](moved a:int[n],const b:!‚Ñ§)qfree:int[n];
def __nsub_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n];  // TODO: might be confusing

def __nsub_assign_u[n:!‚Ñï](moved a:uint[n],const b:uint[n])qfree:uint[n];
def __nsub_assign_u‚Ñ§[n:!‚Ñï](moved a:uint[n],const b:!‚Ñ§)qfree:uint[n];
def __nsub_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n];  // TODO: might be confusing

def __nsub_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñï;

// a¬∑=b
def __mul_assign_s[n:!‚Ñï](moved a:!int[n],const b:int[n])qfree:int[n];
def __mul_assign_s‚Ñ§[n:!‚Ñï](moved a:!int[n],const b:!‚Ñ§)qfree:!int[n];
def __mul_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n];  // TODO: might be confusing

def __mul_assign_u[n:!‚Ñï](moved a:!uint[n],const b:uint[n])qfree:uint[n];
def __mul_assign_u‚Ñ§[n:!‚Ñï](moved a:!uint[n],const b:!‚Ñ§)qfree:!uint[n];
def __mul_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n];  // TODO: might be confusing

def __mul_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __mul_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;
def __mul_assign_‚Ñö(moved a:!‚Ñö,const b:!‚Ñö)qfree:!‚Ñö;
def __mul_assign_‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;
def __mul_assign_‚ÑÇ(moved a:!‚ÑÇ,const b:!‚ÑÇ)qfree:!‚ÑÇ;

// a/=b
def __div_assign_‚Ñö(moved a:!‚Ñö,const b:!‚Ñö)qfree:!‚Ñö;
def __div_assign_‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;
def __div_assign_‚ÑÇ(moved a:!‚ÑÇ,const b:!‚ÑÇ)qfree:!‚ÑÇ;

// a div= b
def __idiv_assign_s[n:!‚Ñï](moved a:!int[n],const b:int[n])qfree:int[n];
def __idiv_assign_s‚Ñ§[n:!‚Ñï](moved a:!int[n],const b:!‚Ñ§)qfree:int[n];
def __idiv_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n]; // TODO: might be confusing

def __idiv_assign_u[n:!‚Ñï](moved a:!uint[n],const b:uint[n])qfree:uint[n];
def __idiv_assign_u‚Ñ§[n:!‚Ñï](moved a:!uint[n],const b:!‚Ñ§)qfree:uint[n];
def __idiv_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n];  // TODO: might be confusing

def __idiv_assign_‚Ñï(a:!‚Ñï,b:!‚Ñï)qfree:!‚Ñï;
def __idiv_assign_‚Ñ§(a:!‚Ñ§,b:!‚Ñ§)qfree:!‚Ñ§;
def __idiv_assign_‚Ñö(a:!‚Ñö,b:!‚Ñö)qfree:!‚Ñ§;
def __idiv_assign_‚Ñù(a:!‚Ñù,b:!‚Ñù)qfree:!‚Ñ§;

// a %= b
def __mod_assign_s[m:!‚Ñï,n:!‚Ñï](moved a:!int[m],const b:int[n])qfree:int[n];
def __mod_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n];

def __mod_assign_u[m:!‚Ñï,n:!‚Ñï](moved a:!uint[m],const b:uint[n])qfree:uint[n];
def __mod_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n];
def __mod_assign_u‚Ñï[n:!‚Ñï](moved a:!uint[n],const b:!‚Ñï)qfree:!uint[n];

def __mod_assign_us[m:!‚Ñï,n:!‚Ñï](moved a:!uint[m],const b:int[n])qfree:int[n];
def __mod_assign_su[m:!‚Ñï,n:!‚Ñï](moved a:!int[m],const b:uint[n])qfree:uint[n];

def __mod_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __mod_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;
def __mod_assign_‚Ñö(moved a:!‚Ñö,const b:!‚Ñö)qfree:!‚Ñö;
def __mod_assign_‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;

// a ^= b
def __pow_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __pow_assign_‚Ñ§‚Ñï(moved a:!‚Ñ§,const b:!‚Ñï)qfree:!‚Ñ§;
def __pow_assign_‚Ñö‚Ñï(moved a:!‚Ñö,const b:!‚Ñï)qfree:!‚Ñö;
def __pow_assign_‚Ñù‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñù;

def __pow_assign_‚Ñö‚Ñ§(moved a:!‚Ñö,const b:!‚Ñ§)qfree:!‚Ñö;
def __pow_assign_‚Ñù‚Ñö(moved a:!‚Ñù,const b:!‚Ñö)qfree:!‚Ñù;
def __pow_assign_‚Ñù‚Ñù(moved a:!‚Ñù,const b:!‚Ñù)qfree:!‚Ñù;

// a ~= b

// def __cat_tt[n:!‚Ñï,m:!‚Ñï][œÉ:*^n,œÑ:*^m](moved x:‚àè œÉ,moved y:‚àè œÑ)qfree:‚àè(œÉ~œÑ);
def __cat_assign_vv[n:!‚Ñï,m:!‚Ñï,a:*](moved xs:a^n,moved ys:a^m)qfree:a^(n+m);
def __cat_assign_aa[a:*](moved xs:a[],moved ys:a[])qfree:a[];

// a |= b
def __orb_assign_s[n:!‚Ñï](moved a:!int[n],const b:int[n])qfree:int[n];
def __orb_assign_s‚Ñ§[n:!‚Ñï](moved a:!int[n],const b:!‚Ñ§)qfree:!int[n];
def __orb_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:int[n])qfree:int[n]; // TODO: potentially confusing

def __orb_assign_u[n:!‚Ñï](moved a:!uint[n],const b:uint[n])qfree:uint[n];
def __orb_assign_u‚Ñ§[n:!‚Ñï](moved a:!uint[n],const b:!‚Ñ§)qfree:!uint[n];
def __orb_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n]; // TODO: potentially confusing

def __orb_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __orb_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;

// a ‚äï= b
def __xorb_assign_s[n:!‚Ñï](moved a:int[n],const b:int[n])qfree:int[n];
def __xorb_assign_s‚Ñ§[n:!‚Ñï](moved a:int[n],const b:!‚Ñ§)qfree:int[n];
def __xorb_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:!int[n])qfree:int[n]; // TODO: potentially confusing

def __xorb_assign_u[n:!‚Ñï](moved a:uint[n],const b:uint[n])qfree:uint[n];
def __xorb_assign_u‚Ñ§[n:!‚Ñï](moved a:uint[n],const b:!‚Ñ§)qfree:uint[n];
def __xorb_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,const b:uint[n])qfree:uint[n]; // TODO: potentially confusing

def __xorb_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __xorb_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;

// a &= b
def __andb_assign_s[n:!‚Ñï](moved a:!int[n],const b:int[n])qfree:int[n];
def __andb_assign_s‚Ñ§[n:!‚Ñï](moved a:!int[n],const b:!‚Ñ§)qfree:!int[n];
def __andb_assign_‚Ñ§s[n:!‚Ñï](moved a:!‚Ñ§,const b:!int[n])qfree:int[n];

def __andb_assign_u[n:!‚Ñï](moved a:!uint[n],const b:uint[n])qfree:uint[n];
def __andb_assign_u‚Ñ§[n:!‚Ñï](moved a:!uint[n],const b:!‚Ñ§)qfree:uint[n];
def __andb_assign_‚Ñ§u[n:!‚Ñï](moved a:!‚Ñ§,b:!uint[n])qfree:uint[n];

def __andb_assign_‚Ñï(moved a:!‚Ñï,const b:!‚Ñï)qfree:!‚Ñï;
def __andb_assign_‚Ñ§(moved a:!‚Ñ§,const b:!‚Ñ§)qfree:!‚Ñ§;
