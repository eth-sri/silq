// args: --run

def zip[a,b,n:!ℕ](xs:a^n,ys:b^n)qfree:(a×b)^n{
	xs:=xs:a[];
	ys:=ys:b[];
	r:=[]:(a×b)[];
	repeat n{
		(x,)~xs:=xs;
		(y,)~ys:=ys;
		r~=[(x,y)];
	}
	([],[]):=(xs,ys); // // TODO: make this unnecessary
	return r coerce (a×b)^n;
}

def main(){
	assert(reverse(zip)((1,2),(3,4),(5,6))==((1,3,5),(2,4,6)));
}
