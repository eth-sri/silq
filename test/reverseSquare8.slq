// args: --run

def map[a:qtype](f: a!→mfree a)[n:!ℕ](x:a^n)mfree{
	y:=[]:a[];
	for i in [0..n){
		(h,)~x:=x;
		y:=y~[f(h)];
	}
	[]:=x;
	return y coerce a^n;
}

def main(){
	x:=0:uint[3];
	x:=x as 𝔹^3;
	mapH:=reverse(map(H)[3]);
	return mapH(x);
}
